service: aws-node-http-api-project
frameworkVersion: '2 || 3'

plugins:
  - serverless-offline
  - serverless-dynamodb-local
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  region: 'eu-west-2'
  iamRoleStatements:
    - Effect: Allow
      Action:
        dynamodb:* # should not do this !
      Resource:
        - arn:aws:dynamodb:eu-west-2:644815620565:table/TodoTable

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

functions:
  addTodo:
    handler: src/addTodo.handler
    events:
      - httpApi:
          path: /todo
          method: post
  getTodos:
    handler: src/getTodos.handler
    events:
      - httpApi:
          path: /todo
          method: get
  getTodoById:
    handler: src/getTodoById.handler
    events:
      - httpApi:
          path: /todo/{id}
          method: get
  updateTodo:
    handler: src/updateTodo.handler
    events:
      - httpApi:
          path: /todo/{id}
          method: put
  deleteTodo:
    handler: src/deleteTodo.handler
    events:
      - httpApi:
          path: /todo/{id}
          method: delete

resources:
  Resources:
    ToDoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TodoTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH